# Find Xerces
#
# This module defines:
# - XERCES_FOUND
# - XERCES_DIR
# - XERCES_ROOT
# - XERCES_INCLUDE_DIRS
# - XERCES_LIBRARIES
#
# - XERCES_VERSION
# - XERCES_VERSION_MAJOR
# - XERCES_VERSION_MINOR
# - XERCES_VERSION_PATCH

SET(XERCES_FOUND false)

INCLUDE(FindPackageHandleStandardArgs)

IF(EXISTS $ENV{XERCES_ROOT}) 
	SET(XERCES_ROOT $ENV{XERCES_ROOT})
ENDIF()

FIND_PATH(XERCES_INCLUDE_DIRS xercesc/util/XercesVersion.hpp PATH ${XERCES_ROOT}/include)

IF (XERCES_INCLUDE_DIRS)
	FIND_FILE(XERCES_VERSION_FILE xercesc/util/XercesVersion.hpp
			  PATH ${XERCES_INCLUDE_DIRS})
	FILE(STRINGS ${XERCES_VERSION_FILE} VERSION_LINE
		REGEX "^#define XERCES_VERSION_MAJOR +[0-9]+")
	STRING(REGEX REPLACE ".+([0-9]+)" "\\1"
		XERCES_VERSION_MAJOR ${VERSION_LINE})
	FILE(STRINGS ${XERCES_VERSION_FILE} VERSION_LINE
		REGEX "^#define XERCES_VERSION_MINOR +[0-9]+")
	STRING(REGEX REPLACE ".+([0-9]+)" "\\1"
		XERCES_VERSION_MINOR ${VERSION_LINE})
	FILE(STRINGS ${XERCES_VERSION_FILE} VERSION_LINE
		REGEX "^#define XERCES_VERSION_REVISION +[0-9]+")
	STRING(REGEX REPLACE ".+([0-9]+)" "\\1"
		XERCES_VERSION_PATCH ${VERSION_LINE})
	SET(XERCES_VERSION "${XERCES_VERSION_MAJOR}.${XERCES_VERSION_MINOR}.${XERCES_VERSION_PATCH}")
	IF(UNIX)
		FIND_LIBRARY(XERCES_LIBRARIES xerces-c PATH ${XERCES_ROOT}/lib)
	ELSEIF(WIN32)
		FIND_LIBRARY(XERCES_LIBRARY_DEBUG "xerces-c_${XERCES_VERSION_MAJOR}D" PATH ${XERCES_ROOT}/lib)
		FIND_LIBRARY(XERCES_LIBRARY_RELEASE "xerces-c_${XERCES_VERSION_MAJOR}" PATH ${XERCES_ROOT}/lib)
		SET(XERCES_LIBRARIES "optimized;${XERCES_LIBRARY_RELEASE};debug;${XERCES_LIBRARY_DEBUG}" CACHE STRING Library)
	ENDIF()
	MARK_AS_ADVANCED(XERCES_VERSION_FILE XERCES_INCLUDE_DIRS XERCES_LIBRARIES)
	FIND_PACKAGE_HANDLE_STANDARD_ARGS(Xerces 
			REQUIRED_VARS XERCES_LIBRARIES XERCES_INCLUDE_DIRS
		VERSION_VAR XERCES_VERSION)
		
	SET(XERCES_FOUND true)
	SET(XERCES_DIR ${XERCES_ROOT})
ENDIF ()

IF(XERCES_FOUND)
	MESSAGE(STATUS "Found Xerces ${XERCES_VERSION}")
ELSE()
	MESSAGE(STATUS "Xerces not found")
ENDIF()
